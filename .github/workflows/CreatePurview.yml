name: Create Purview Run Tests

on: workflow_dispatch

jobs:
  # create-purview-account:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         enable-AzPSSession: true 
      
  #     - name: Create Purview Account 
  #       uses: azure/powershell@v1 
  #       with:
  #         azPSVersion: latest 
  #         inlineScript: |
  #           [string] $RG_NAME = "${{ secrets.RG_NAME }}"
  #           [string] $LOCATION = "${{ secrets.PURVIEW_LOCATION }}"
  #           [string] $NETWORK = "${{ secrets.NETWORK_ACCESS }}"
  #           [string] $PURVIEW_ACCOUNT_NAME = "${{ secrets.PURVIEW_ACCOUNT_NAME }}"
  #           Install-Module Az.Purview -Force
  #           Import-Module Az.Purview
  #           New-AzPurviewAccount -Name "$PURVIEW_ACCOUNT_NAME" -ResourceGroupName "$RG_NAME" -Location "$LOCATION" -IdentityType SystemAssigned -SkuCapacity 4 -SkuName Standard -PublicNetworkAccess "$NETWORK"

  pytest2:
    # needs: create-purview-account
    runs-on: ${{ matrix.os }}
    env:
      purviewautomation-tenant-id: ${{ secrets.TENANT_ID }}
      purviewautomation-sp-client-id: ${{ secrets.SP_CLIENT_ID }}
      purviewautomation-sp-secret: ${{ secrets.SP_SECRET }}
      purview-account-name: ${{ secrets.PURVIEW_ACCOUNT_NAME }}
    strategy:
      matrix:
        os: [ubuntu-latest] # add windows-latest later
        python-version: ['3.9', '3.10']
    steps:
      - uses: actions/checkout@v3 
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip 
          python -m pip install pytest 
          python -m pip install requests==2.28.1
          pytest 






  # test:
  #   #needs: create-purview-account
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     purviewautomation-tenant-id: ${{ secrets.TENANT_ID }}
  #     purviewautomation-sp-client-id: ${{ secrets.SP_CLIENT_ID }}
  #     purviewautomation-sp-secret: ${{ secrets.SP_SECRET }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest] # add windows-latest later
  #       python-version: ['3.7', '3.8', '3.9', '3.10']
  #   steps:
  #     - uses: actions/checkout@v3 
  #     - name: Setup Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v4.3.0
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install dependencies 
  #       run: |
  #         python -m pip install --upgrade pip 
  #         pip install tox tox-gh-actions 
  #     - name: Test with tox 
  #       run: tox -vv
  #       env:
  #         purviewautomation-tenant-id: ${{ secrets.TENANT_ID }}
  #         purviewautomation-sp-client-id: ${{ secrets.SP_CLIENT_ID }}
  #         purviewautomation-sp-secret: ${{ secrets.SP_SECRET }}
  
  # delete-purview-account:
  #   needs: [create-purview-account, test]
  #   if: always() # Always will delete the account even if the test job fails
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         enable-AzPSSession: true
  #     - name: Delete Purview Account 
  #       uses: azure/powershell@v1 
  #       with: 
  #         azPSVersion: latest
  #         inlineScript: |
  #           [string] $RG_NAME = "${{ secrets.RG_NAME }}"
  #           [string] $PURVIEW_ACCOUNT_NAME = "${{ secrets.PURVIEW_ACCOUNT_NAME }}"
  #           Install-Module Az.Purview -Force
  #           Import-Module Az.Purview
  #           Remove-AzPurviewAccount -Name "$PURVIEW_ACCOUNT_NAME" -ResourceGroupName "$RG_NAME"





